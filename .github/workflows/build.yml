name: Build

on:
  push:
    branches: main
  pull_request:
    branches: '*'

defaults:
  run:
    shell: bash -l {0}

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install node
        uses: actions/setup-node@v1
        with:
          node-version: '14.x'
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'

      - name: Setup pip cache
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: pip-3.8-${{ hashFiles('package.json') }}
          restore-keys: |
            pip-3.8-
            pip-

      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - name: Setup yarn cache
        uses: actions/cache@v2
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            yarn-

      - name: Setup xeus-python build cache
        uses: actions/cache@v2
        with:
          path: |
            src/python_data.data
            src/python_data.js
            src/web_worker_kernel.ts
            src/worker.js
            src/xpython_wasm.js
            src/xpython_wasm.wasm
          key: ${{ hashFiles('Dockerfile') }}

      - name: Install dependencies
        run: python -m pip install -U jupyterlab~=3.1 check-manifest

      - name: Build the extension
        run: |
          set -eux
          jlpm
          # build separately for now
          jlpm run build:wasm
          jlpm run build
          jlpm run eslint:check
          python -m pip install .

          jupyter labextension list 2>&1 | grep -ie "@jupyterlite/xeus-python-kernel.*OK"

          # TODO: add JupyterLite browser check
          # python -m jupyterlab.browser_check

          check-manifest -v

          pip install build
          python -m build --sdist
          cp dist/*.tar.gz jupyterlite-xeus-python.tar.gz
          pip uninstall -y jupyterlite-xeus-python jupyterlab
          rm -rf jupyterlite-xeus-python

      - uses: actions/upload-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist
          path: jupyterlite-xeus-python.tar.gz

  test_isolated:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.8'
          architecture: 'x64'
      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist
      - name: Install and Test
        run: |
          set -eux
          # Remove NodeJS, twice to take care of system and locally installed node versions.
          sudo rm -rf $(which node)
          sudo rm -rf $(which node)
          pip install jupyterlite-xeus-python.tar.gz
          pip install jupyterlab
          jupyter labextension list 2>&1 | grep -ie "@jupyterlite/xeus-python-kernel.*OK"

          # TODO: add JupyterLite browser check
          # python -m jupyterlab.browser_check --no-chrome-test

  python-tests-mamba-python:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: xeus-python-kernel
          environment-file: environment.yml
          python-version: '3.10'
          mamba-version: '*'

      - name: Make sure the Mamba Python API is available
        run: |
          mamba install mamba
          python -c "from mamba.api import create"

      - name: Install
        run: pip install jupyterlite-xeus-python.tar.gz

      - name: Run tests
        run: pytest -rP tests/test_xeus_python_env.py

  python-tests-mamba:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: xeus-python-kernel
          environment-file: environment.yml
          python-version: '3.10'
          mamba-version: '*'

      - name: Install
        run: pip install jupyterlite-xeus-python.tar.gz

      - name: Run tests
        run: pytest -rP tests/test_xeus_python_env.py

  python-tests-micromamba:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist

      - name: Install mamba
        uses: mamba-org/provision-with-micromamba@main
        with:
          micromamba-version: '0.22.0'
          environment-file: environment.yml
          environment-name: xeus-python-kernel

      - name: Install
        run: pip install jupyterlite-xeus-python.tar.gz

      - name: Run tests
        run: pytest -rP tests/test_xeus_python_env.py

  python-tests-conda:
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: actions/download-artifact@v2
        with:
          name: jupyterlite-xeus-python-sdist

      - name: Setup conda
        uses: conda-incubator/setup-miniconda@v2
        with:
          activate-environment: xeus-python-kernel
          environment-file: environment.yml
          python-version: '3.10'

      - name: Install
        run: pip install jupyterlite-xeus-python.tar.gz

      - name: Run tests
        run: pytest -rP tests/test_xeus_python_env.py
